version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: orchestrator-postgres-dev
    environment:
      POSTGRES_DB: orchestrator_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - orchestrator-dev-network

  # Redis for Queue Management
  redis:
    image: redis:7-alpine
    container_name: orchestrator-redis-dev
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - orchestrator-dev-network

  # Kuro Mock Service (for testing)
  kuro-mock:
    build:
      context: .
      dockerfile: Dockerfile.kuro-mock
    container_name: kuro-mock-dev
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - orchestrator-dev-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  orchestrator-dev-network:
    driver: bridge
